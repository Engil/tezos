# Definition for the environment to run all integration tests.
# This is also used by Tezt tests.
# In general we do not have to run make, which takes a while,
# because the binaries have been produced by the build job and are
# in the cache. But if they are not, we need to build them.
# Ideally we should also check that the baker / accuser / endorser
# exist (some tests use them) but their actual name depend on the protocol.
.integration_template:
  extends: .test_template
  before_script:
    - if [ ! -f tezos-node ] || [ ! -f tezos-client ] || [ ! -f tezos-codec ] || [ ! -f tezos-sandbox ]; then make; fi

integration:proto:sandbox:
  extends: .integration_template
  script:
    - dune build @runtest_sandbox

integration:compiler-rejections:
  extends: .integration_template
  script:
    - dune build @runtest_rejections

############################################################
## Stage: run scripts to check they are working properly  ##
############################################################

script:prepare_migration_test:
  extends: .test_template
  before_script:
    - last_proto_name=$(find src -name "proto_[0-9][0-9][0-9]_*" | awk -F'/' '{print $NF}' | sort -r | head -1)
    - last_proto_version=$(echo $last_proto_name | cut -d'_' -f2)
    - new_proto_version=$(printf "%03d" $((10#$last_proto_version + 1)))
    - make
  script:
    - ./scripts/prepare_migration_test.sh manual "next_$new_proto_version" 1

script:snapshot_alpha_and_link:
  extends: .test_template
  before_script:
    - last_proto_name=$(find src -name "proto_[0-9][0-9][0-9]_*" | awk -F'/' '{print $NF}' | sort -r | head -1)
    - last_proto_version=$(echo $last_proto_name | cut -d'_' -f2)
    - new_proto_version=$(printf "%03d" $((10#$last_proto_version + 1)))
    - make
  script:
    - ./scripts/snapshot_alpha_and_link.sh "$new_proto_version" next
    - make

############################################################
## Stage: run OCaml integration tests                     ##
############################################################

integration:sandboxes:voting:
  extends: .integration_template
  script:
    - TMP=$PWD make -f sandbox.Makefile voting_demo_noops
  artifacts:
    paths:
      - flextesa-voting-demo-noops
    expire_in: 1 day
    when: on_failure

integration:sandboxes:acc-endorsement:
  extends: .integration_template
  script:
    - TMP=$PWD make -f sandbox.Makefile accusations_simple_double_endorsing
  artifacts:
    paths:
      - flextesa-acc-sde
    expire_in: 1 day
    when: on_failure

integration:sandboxes:u-a-u:
  extends: .integration_template
  script:
    - TMP=$PWD make -f sandbox.Makefile user_activated_upgrade_next
    - TMP=$PWD make -f sandbox.Makefile user_activated_upgrade_alpha
  artifacts:
    paths:
      - flextesa-hard-fork
      - flextesa-hard-fork-alpha
    expire_in: 1 day
    when: on_failure

integration:sandboxes:daemons-upgrade:
  extends: .integration_template
  script:
    - TMP=$PWD make -f sandbox.Makefile daemons_upgrade_next
    - TMP=$PWD make -f sandbox.Makefile daemons_upgrade_alpha
  artifacts:
    paths:
      - flextesa-daemons-upgrade
      - flextesa-daemons-upgrade-alpha
    expire_in: 1 day
    when: on_failure

############################################################
## Stage: run python integration tests                    ##
############################################################

# definition for the environment to run all integration tests
# integration tests are run only on x86_64 architectures (for now)
.integration_python_template:
  extends: .test_template
  needs:
    - build_x86_64
  variables:
    PYTEST_SUITE: ""
    PYTEST_SUITE_MARKER: ""
    PYTEST_SUITE_NAME: ""
  before_script:
    # Load the environment poetry previously created in the docker image.
    # Give access to the Python dependencies/executables
    - . $HOME/.venv/bin/activate
    - mkdir tests_python/tmp
    - touch tests_python/tmp/empty__to_avoid_glob_failing
    - cd tests_python
  script:
    - poetry run pytest "$PYTEST_SUITE" --exitfirst -m "$PYTEST_SUITE_MARKER" -s --log-dir=tmp "--junitxml=reports/$PYTEST_SUITE_NAME.xml" 2>&1 | tee "tmp/$PYTEST_SUITE_NAME.out" | tail
  after_script:
    - tail -n 100 tests_python/tmp/*
  artifacts:
    paths:
      - tests_python/tmp/
    reports:
      junit: tests_python/reports/*.xml
    expire_in: 7 day
    when: always
  # python scripts don't need the _build directory
  # but only the binaries in the artifacts
  cache: {}

# this section is updated using the script scripts/update_integration_test.sh
##BEGIN_INTEGRATION_PYTHON##
integration:010_batch:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010"
    PYTEST_SUITE_MARKER: "not slow"
    PYTEST_SUITE_NAME: 010_batch

integration:010_baker_endorser:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_baker_endorser.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_baker_endorser

integration:010_block_times_ideal_scenario:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_block_times_ideal_scenario.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_block_times_ideal_scenario

integration:010_bootstrap:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_bootstrap.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_bootstrap

integration:010_contract:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_contract.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_contract

integration:010_contract_annotations:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_contract_annotations.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_contract_annotations

integration:010_contract_macros:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_contract_macros.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_contract_macros

integration:010_contract_onchain_opcodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_contract_onchain_opcodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_contract_onchain_opcodes

integration:010_contract_opcodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_contract_opcodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_contract_opcodes

integration:010_forge_block:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_forge_block.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_forge_block

integration:010_many_bakers:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_many_bakers.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_many_bakers

integration:010_many_nodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_many_nodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_many_nodes

integration:010_mempool:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_mempool.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_mempool

integration:010_nonce_seed_revelation:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_nonce_seed_revelation.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_nonce_seed_revelation

integration:010_perf_endorsement:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_perf_endorsement.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_perf_endorsement

integration:010_rpc:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_010/test_rpc.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 010_rpc

integration:011_batch:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011"
    PYTEST_SUITE_MARKER: "not slow"
    PYTEST_SUITE_NAME: 011_batch

integration:011_baker_endorser:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_baker_endorser.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_baker_endorser

integration:011_block_times_ideal_scenario:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_block_times_ideal_scenario.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_block_times_ideal_scenario

integration:011_bootstrap:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_bootstrap.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_bootstrap

integration:011_contract:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_contract.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_contract

integration:011_contract_annotations:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_contract_annotations.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_contract_annotations

integration:011_contract_macros:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_contract_macros.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_contract_macros

integration:011_contract_onchain_opcodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_contract_onchain_opcodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_contract_onchain_opcodes

integration:011_contract_opcodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_contract_opcodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_contract_opcodes

integration:011_forge_block:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_forge_block.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_forge_block

integration:011_legacy_snapshots:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_legacy_snapshots.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_legacy_snapshots

integration:011_legacy_upgrade:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_legacy_upgrade.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_legacy_upgrade

integration:011_many_bakers:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_many_bakers.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_many_bakers

integration:011_many_nodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_many_nodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_many_nodes

integration:011_mempool:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_mempool.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_mempool

integration:011_multinode_snapshot:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_multinode_snapshot.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_multinode_snapshot

integration:011_multinode_storage_reconstruction:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_multinode_storage_reconstruction.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_multinode_storage_reconstruction

integration:011_nonce_seed_revelation:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_nonce_seed_revelation.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_nonce_seed_revelation

integration:011_perf_endorsement:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_perf_endorsement.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_perf_endorsement

integration:011_rpc:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_rpc.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_rpc

integration:011_voting_full:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_011/test_voting_full.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: 011_voting_full

integration:alpha_batch:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha"
    PYTEST_SUITE_MARKER: "not slow"
    PYTEST_SUITE_NAME: alpha_batch

integration:alpha_baker_endorser:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_baker_endorser.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_baker_endorser

integration:alpha_block_times_ideal_scenario:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_block_times_ideal_scenario.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_block_times_ideal_scenario

integration:alpha_bootstrap:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_bootstrap.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_bootstrap

integration:alpha_contract:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_contract.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_contract

integration:alpha_contract_annotations:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_contract_annotations.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_contract_annotations

integration:alpha_contract_macros:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_contract_macros.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_contract_macros

integration:alpha_contract_onchain_opcodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_contract_onchain_opcodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_contract_onchain_opcodes

integration:alpha_contract_opcodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_contract_opcodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_contract_opcodes

integration:alpha_forge_block:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_forge_block.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_forge_block

integration:alpha_legacy_snapshots:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_legacy_snapshots.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_legacy_snapshots

integration:alpha_legacy_upgrade:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_legacy_upgrade.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_legacy_upgrade

integration:alpha_many_bakers:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_many_bakers.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_many_bakers

integration:alpha_many_nodes:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_many_nodes.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_many_nodes

integration:alpha_mempool:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_mempool.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_mempool

integration:alpha_multinode_snapshot:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_multinode_snapshot.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_multinode_snapshot

integration:alpha_multinode_storage_reconstruction:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_multinode_storage_reconstruction.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_multinode_storage_reconstruction

integration:alpha_nonce_seed_revelation:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_nonce_seed_revelation.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_nonce_seed_revelation

integration:alpha_perf_endorsement:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_perf_endorsement.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_perf_endorsement

integration:alpha_rpc:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_rpc.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_rpc

integration:alpha_voting_full:
  extends: .integration_python_template
  variables:
    PYTEST_SUITE: "tests_alpha/test_voting_full.py"
    PYTEST_SUITE_MARKER: "slow"
    PYTEST_SUITE_NAME: alpha_voting_full

integration:examples:
  extends: .integration_python_template
  script:
    - PYTHONPATH=$PYTHONPATH:./ poetry run python examples/forge_transfer.py
    - PYTHONPATH=$PYTHONPATH:./ poetry run python examples/example.py
    - PYTHONPATH=./ poetry run pytest --exitfirst examples/test_example.py
##END_INTEGRATION_PYTHON##
